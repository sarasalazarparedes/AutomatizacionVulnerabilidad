package com.qavulnerabilidad.tests;


import io.qameta.allure.*;
import io.restassured.response.Response;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

import static io.qameta.allure.SeverityLevel.CRITICAL;
import static io.restassured.RestAssured.given;

public class VulnerabilityTest {
    String host = "http://localhost:9292";
    Response response;
    String idScan;
    @Test
    @Order(2)
    @DisplayName("Test vulnerabilidad")
    @Description("Este test es para iniciar un escaneo con owasp zap")
    @Severity(CRITICAL)
    @Owner("UCB")
    @Link(name = "Website", url = "www.google.com")
    @Issue("DEFECT-123")
    @TmsLink("TMS-456")
    @Epic("Security")
    @Feature("Vulnerability")
    @Story("Authentication Security")
    public void scannerVulnerabilityTest() throws InterruptedException {
        // iniciar escaneo POST/GET  >  http://localhost:9292/JSON/ascan/action/scan/?url=HOST
        startScanner();
        waitScanIsCompleted();
    }

    @Step(" 1) Se seleccion el HOST y se inicia el Escaneo de vulnerabilidad")
    private void startScanner() {
        response= given().
                queryParam("url","https://www.demoblaze.com").
                log().all()
                .when()
                .get(host+"/JSON/ascan/action/scan/");

        response.then().log().all();
        idScan = response.then().extract().path("scan");
        System.out.println("id >>>> "+idScan);
    }

    @Step(" 2) verificar que el escaneo este al 100%")
    private void waitScanIsCompleted() throws InterruptedException {
        String state = "0";
        do {
            Thread.sleep(5000);
            response= given().
                    queryParam("scanId",idScan).
                    log().all()
                    .when()
                    .get(host+"/JSON/ascan/view/status/");
            response.then().log().all();
            state = response.then().extract().path("status");
            System.out.println("progreso : [" + state + "%] ");
        }while (state != null && !state.equals("100"));
    }

    @AfterEach
    public void generateReport(){

        response= given().
                queryParam("scanId",idScan).
                log().all()
                .when()
                .get(host+"/HTML/ascan/view/scanProgress/");

        response.then().log().all();
        attachReport("list vulnerability", response.getBody().asString());
        response= given().
                log().all()
                .when()
                .get(host+"/OTHER/core/other/htmlreport/");

        response.then().log().all();
        attachReport("report owasp zap vulneerability alerts", response.getBody().asString());
    }

    @Attachment(value = "{0}", type = "text/html")
    public String attachReport(String name, String content){
        return content;
    }

}